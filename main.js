(()=>{var e={104:e=>{var t="undefined"!=typeof process&&process.pid?process.pid.toString(36):"";function o(){var e=Date.now(),t=o.last||e;return o.last=e>t?e:t+1}e.exports=e.exports.default=function(e,n){return(e||"")+""+t+o().toString(36)+(n||"")},e.exports.process=function(e,n){return(e||"")+t+o().toString(36)+(n||"")},e.exports.time=function(e,t){return(e||"")+o().toString(36)+(t||"")}}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var d=t[n]={exports:{}};return e[n](d,d.exports,o),d.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=o(104),t=o.n(e);const n=document.getElementById("add-button"),r=document.getElementById("add-form"),d=document.getElementById("library"),i=document.getElementById("hide-button"),a=document.getElementById("form-button"),{children:c}=r,s=c[1],l=c[4],u=c[7],g=c[10];function p(e,t,o,n){const r=document.createElement("p");return r.classList.add(t),r.innerText=`${o}: ${n}`,e.appendChild(r),r}function k(e,t,o,n){const r=document.createElement("div");r.setAttribute("key",e),r.classList.add("book"),p(r,"book-title","Title",t.title),p(r,"book-author","Author",t.author),p(r,"book-pages","Pages",t.pages);const i=p(r,"book-status","Status",t.isRead?"Have Read":"Not Read Yet"),a=document.createElement("button");a.addEventListener("click",(()=>{o(e),i.innerText="Status: "+(t.isRead?"Have Read":"Not Read Yet")})),a.innerText="Toggle Status",r.appendChild(a);const c=document.createElement("button");c.addEventListener("click",(()=>{n(e),r.remove()})),c.innerText="Delete Book",r.appendChild(c),d.appendChild(r)}n.addEventListener("click",(()=>{r.toggleAttribute("hidden"),n.toggleAttribute("hidden"),i.toggleAttribute("hidden")})),i.addEventListener("click",(()=>{r.toggleAttribute("hidden"),n.toggleAttribute("hidden"),i.toggleAttribute("hidden")})),s.addEventListener("input",(()=>{s.checkValidity()})),l.addEventListener("input",(()=>{l.checkValidity()})),u.addEventListener("input",(()=>{u.checkValidity()}));const b=function(e,t,o,n){Object.entries(e.books).forEach((e=>{const[n,r]=e;k(n,r,t,o)})),a.addEventListener("click",(e=>{if(!s.validity.valid)return console.log("title rejected"),!1;if(l.checkValidity(),!l.validity.valid)return console.log("author rejected"),!1;if(u.checkValidity(),!u.validity.valid)return console.log("pages rejected"),!1;console.log("book accepted");const{key:r,newBook:d}=n(s.value,l.value,u.value,g.checked);return k(r,d,t,o),e.preventDefault(),!1}))};function v(e){localStorage.setItem("OdinLibrary",JSON.stringify(e.books))}const f=function(e){b(e,(t=>{e.books[t].toggleRead(),v(e)}),(t=>{e.deleteBook(t),v(e)}),((o,n,r,d)=>{const i=t()(),a=e.addNewBook(o,n,r,d,i);return v(e),{key:i,newBook:a}}))};f(function(){const e=function(){const e={};return{books:e,addNewBook:(t,o,n,r,d)=>{const i=function(e,t,o,n){const r={title:e,author:t,pages:o,isRead:n,toggleRead:()=>(r.isRead=!r.isRead,r.isRead)};return r}(t,o,n,r);return e[d]=i,i},addBook:(t,o)=>{e[o]=t},deleteBook:t=>{delete e[t]}}}(),o=JSON.parse(localStorage.getItem("OdinLibrary"));return console.log(o),o&&0!==o.length?Object.entries(o).forEach((t=>{const[o,n]=t,{title:r,author:d,pages:i,isRead:a}=n;e.addNewBook(r,d,i,a,o),console.log(n)})):(e.addNewBook("The quick brown fox","a lazy dog","5",!1,t()()),v(e)),console.log(e.books),e}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,